package classes.taxi;

import classes.taxi.utils.VehicleInfoGenerator;

/**
 * Represents a vehicle in the taxi system.
 * <p>
 * The {@link Vehicle} class stores information about a vehicle, including its ID, registration number,
 * model, year of manufacture, and the ID of the cabbie associated with the vehicle. The class provides
 * methods to update vehicle details and retrieve information about the vehicle.
 * </p>
 */
public class Vehicle {
	private int vehicleId;
	private String registrationNumber;
	private String model;
	private int year;
	private int cabbieId;

    /**
     * Constructs a new {@link Vehicle} instance with random details generated by {@link VehicleInfoGenerator}.
     * <p>
     * The constructor initializes the vehicle with a random ID, registration number, model, and year,
     * and assigns the provided cabbie ID to the vehicle.
     * </p>
     *
     * @param cabbieId The unique identifier for the cabbie associated with this vehicle.
     */
	public Vehicle(int cabbieId){
		VehicleInfoGenerator vehicleRand = new VehicleInfoGenerator();
		this.vehicleId = vehicleRand.getVehicleId();
		this.registrationNumber = vehicleRand.getRegistrationNumber();
		this.model = vehicleRand.getModel();
		this.year = vehicleRand.getYear();
		this.cabbieId = cabbieId;
	}

    /**
     * Updates a specific field of the vehicle with a new value.
     * <p>
     * The field to be updated is specified by the {@code field} parameter, and the new value is provided
     * by the {@code newValue} parameter. The method updates the vehicle's model, year, registration number,
     * or cabbie ID based on the value of the {@code field} parameter.
     * </p>
     *
     * @param field The field to update. Valid values are:
     *              <ul>
     *                  <li>"1" - model</li>
     *                  <li>"2" - year</li>
     *                  <li>"3" - registration number</li>
     *                  <li>"4" - cabbie ID</li>
     *              </ul>
     * @param newValue The new value to set for the specified field.
     */
	public void update(String field, String newValue){
		int newValueInt;
		switch(field){
			case "1":
				this.model = newValue;
			break;
			case "2":
				newValueInt = Integer.parseInt(newValue);
				this.year = newValueInt;
			break;
			case "3":
				this.registrationNumber = newValue;
			break;
			case "4":
				newValueInt = Integer.parseInt(newValue);
				this.cabbieId = newValueInt;
			break;
		}
	}
    /**
     * Returns the unique identifier for this vehicle.
     *
     * @return The vehicle ID.
     */
	public int getVehicleId() {
		return vehicleId;
	}
	/**
     * Returns the registration number of this vehicle.
     *
     * @return The registration number.
     */
	public String getRegistrationNumber() {
		return registrationNumber;
	}
	/**
	* Returns the unique identifier for the cabbie associated with this vehicle.
	*
	* @return The cabbie ID.
	*/
	public int getCabbieId() {
		return cabbieId;
	}
    /**
     * Returns a string representation of this vehicle.
     * <p>
     * The string representation includes the vehicle ID, registration number, model, year, and cabbie ID.
     * </p>
     *
     * @return A string representation of the vehicle.
     */
	@Override
	public String toString() {
		return "Vehicle [vehicleId=" + vehicleId + ", registrationNumber=" + registrationNumber + ", model=" + model
				+ ", year=" + year + ", cabbieId=" + cabbieId + "]";
	}
}
