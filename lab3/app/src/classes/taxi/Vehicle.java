package classes.taxi;

import classes.taxi.utils.VehicleInfoGenerator;

/**
 * Represents a vehicle in the taxi system.
 * <p>
 * The {@link Vehicle} class stores information about a vehicle, including its ID, registration number,
 * model, year of manufacture, and the ID of the cabbie associated with the vehicle. The class provides
 * methods to update vehicle details and retrieve information about the vehicle.
 * </p>
 */
public class Vehicle {
	private String vehicleId;
	private String registrationNumber;
	private String model;
	private int year;
	private String cabbieId;

    /**
     * Constructs a new {@link Vehicle} instance with random details generated by {@link VehicleInfoGenerator}.
     * <p>
     * The constructor initializes the vehicle with a random ID, registration number, model, and year,
     * and assigns the provided cabbie ID to the vehicle.
     * </p>
     *
     * @param cabbieId The unique identifier for the cabbie associated with this vehicle.
     */
	public Vehicle(String cabbieId){
		VehicleInfoGenerator vehicleRand = new VehicleInfoGenerator();
		this.vehicleId = vehicleRand.getVehicleId();
		this.registrationNumber = vehicleRand.getRegistrationNumber();
		this.model = vehicleRand.getModel();
		this.year = vehicleRand.getYear();
		this.cabbieId = cabbieId;
	}
	/**
	 * Updates a specific field of the object based on the given field identifier and new value.
	 * <p>
	 * This method updates different fields of the object depending on the value of the {@code field} parameter.
	 * It uses a {@code switch} statement to determine which field to update. The valid field identifiers and their
	 * corresponding updates are as follows:
	 * </p>
	 * <ul>
	 *     <li>"1" - Updates the model field with the {@code newValue} string.</li>
	 *     <li>"2" - Updates the year field by converting the {@code newValue} string to an integer.</li>
	 *     <li>"3" - Updates the registration number field with the {@code newValue} string.</li>
	 *     <li>"4" - Updates the cabbie ID field by converting the {@code newValue} string to an integer.</li>
	 * </ul>
	 *
	 * @param field The identifier of the field to be updated. The valid values are:
	 *              <ul>
	 *                  <li>"1" - Model</li>
	 *                  <li>"2" - Year</li>
	 *                  <li>"3" - Registration number</li>
	 *                  <li>"4" - Cabbie ID</li>
	 *              </ul>
	 * @param newValue The new value to set for the specified field. This value is used to update the field
	 *                 identified by {@code field}. For "2" and "4", the value is expected to be an integer represented
	 *                 as a string.
	 */
	public void update(String field, String newValue){
		int newValueInt;
		switch(field){
			case "1":
				System.out.print("Campo \"modelo\"");
				this.model = newValue;
			break;
			case "2":
				System.out.print("Campo \"ano\"");
				newValueInt = Integer.parseInt(newValue);
				this.year = newValueInt;
			break;
			case "3":
				System.out.print("Campo \"numero de registro\"");
				this.registrationNumber = newValue;
			break;
			case "4":
				System.out.print("Campo \"cabbieId\"");
				this.cabbieId = newValue;
			break;
		}
	}
    /**
     * Returns the unique identifier for this vehicle.
     *
     * @return The vehicle ID.
     */
	public String getVehicleId() {
		return vehicleId;
	}
	/**
     * Returns the registration number of this vehicle.
     *
     * @return The registration number.
     */
	public String getRegistrationNumber() {
		return registrationNumber;
	}
	/**
	* Returns the unique identifier for the cabbie associated with this vehicle.
	*
	* @return The cabbie ID.
	*/
	public String getCabbieId() {
		return cabbieId;
	}
    /**
     * Returns a string representation of this vehicle.
     * <p>
     * The string representation includes the vehicle ID, registration number, model, year, and cabbie ID.
     * </p>
     *
     * @return A string representation of the vehicle.
     */
	@Override
	public String toString() {
		return "Vehicle [vehicleId=" + vehicleId + ", registrationNumber=" + registrationNumber + ", model=" + model
				+ ", year=" + year + ", cabbieId=" + cabbieId + "]";
	}
}
